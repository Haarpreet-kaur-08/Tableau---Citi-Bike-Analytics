<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xml:base='https://prod-ca-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='lab-03' path='/t/harpreetkaur/workbooks' revision='1.0' site='harpreetkaur' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2014-01 - Citi Bike trip data' inline='true' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2014-01 - Citi Bike trip data' name='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs'>
            <connection class='textscan' directory='C:/Users/admin/Desktop/CPSC LAB-03' filename='2014-01 - Citi Bike trip data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='2014-01 - Citi Bike trip data.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='string' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='date' date-parse-format='yyyy' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-01 - Citi Bike trip data.csv' table='[2014-01 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-02 - Citi Bike trip data.csv' table='[2014-02 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-03 - Citi Bike trip data.csv' table='[2014-03 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-04 - Citi Bike trip data.csv' table='[2014-04 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-05 - Citi Bike trip data.csv' table='[2014-05 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-06 - Citi Bike trip data.csv' table='[2014-06 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-07 - Citi Bike trip data.csv' table='[2014-07 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-08 - Citi Bike trip data.csv' table='[2014-08 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201409-citibike-tripdata.csv' table='[201409-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201410-citibike-tripdata.csv' table='[201410-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201411-citibike-tripdata.csv' table='[201411-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201412-citibike-tripdata.csv' table='[201412-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='2014-01 - Citi Bike trip data.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='string' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='date' date-parse-format='yyyy' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-01 - Citi Bike trip data.csv' table='[2014-01 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-02 - Citi Bike trip data.csv' table='[2014-02 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-03 - Citi Bike trip data.csv' table='[2014-03 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-04 - Citi Bike trip data.csv' table='[2014-04 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-05 - Citi Bike trip data.csv' table='[2014-05 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-06 - Citi Bike trip data.csv' table='[2014-06 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-07 - Citi Bike trip data.csv' table='[2014-07 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-08 - Citi Bike trip data.csv' table='[2014-08 - Citi Bike trip data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='string' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201409-citibike-tripdata.csv' table='[201409-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201410-citibike-tripdata.csv' table='[201410-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201411-citibike-tripdata.csv' table='[201411-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201412-citibike-tripdata.csv' table='[201412-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[2014-01 - Citi Bike trip data.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN([Calculation_834291853491060736]) - LOOKUP(ZN([Calculation_834291853491060736]), -1)) / ABS(LOOKUP(ZN([Calculation_834291853491060736]), -1))'>
          <table-calc level-address='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]' ordering-field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[starttime]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([tripduration]), -2, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Zip start' datatype='spatial' name='[Calculation_1001769464854626304]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([start station latitude],[start station longitude])' />
      </column>
      <column caption='Zip end' datatype='spatial' name='[Calculation_1001769464854798337]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([end station latitude],[end station longitude])' />
      </column>
      <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
      </column>
      <column caption='Gender_Cat' datatype='string' name='[Calculation_1479432500277837825]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [gender] = 0 then &quot;Male&quot;&#13;&#10;ELSEIF [gender] = 1 then &quot;Female&quot;&#13;&#10;ELSEIF [gender] = 2 THEN &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Today 2014' datatype='date' name='[Calculation_1479432500300562434]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='#2014-01-01#' />
      </column>
      <column aggregation='Sum' caption='Age' datatype='integer' name='[Calculation_1479432500301152259]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='Int(DATEDIFF(&apos;day&apos;,[birth year],[Calculation_1479432500300562434]) /365.25)' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_1479432500308398084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DISTANCE(&#13;&#10;MAKEPOINT([start station longitude],[start station latitude]),&#13;&#10;MAKEPOINT([end station longitude],[end station latitude]),&#13;&#10;&apos;miles&apos;)' />
      </column>
      <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([bikeid])' />
      </column>
      <column caption='Unique Bike id' datatype='integer' name='[Calculation_834291853493370882]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([bikeid])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2014-01 - Citi Bike trip data.csv' datatype='table' name='[__tableau_internal_object_id__].[2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24]' role='measure' type='quantitative' />
      <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
      <column caption='Birth Year' datatype='date' datatype-customized='true' name='[birth year]' role='dimension' type='ordinal' />
      <column caption='End Station Id' datatype='string' default-role='measure' default-type='quantitative' name='[end station id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[cum:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[pcdf:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]' ordering-field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[starttime]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[pcto:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc level-address='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]' ordering-field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[starttime]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/admin/Desktop/SEMESTER-3/CPSC/CPSC LAB-03/Citi Bike trip data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/11/2022 10:26:33 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='2014-01 - Citi Bike trip data' increment-value='%null%' refresh-type='create' rows-inserted='8081216' timestamp-start='2022-04-11 22:23:09.766' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>tripduration</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tripduration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tripduration</remote-alias>
              <ordinal>0</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11834</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>starttime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[starttime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>starttime</remote-alias>
              <ordinal>1</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7467006</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stoptime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[stoptime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stoptime</remote-alias>
              <ordinal>2</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7628654</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station id</remote-alias>
              <ordinal>3</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station name</remote-alias>
              <ordinal>4</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station latitude</remote-alias>
              <ordinal>5</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station longitude</remote-alias>
              <ordinal>6</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station id</remote-alias>
              <ordinal>7</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station name</remote-alias>
              <ordinal>8</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station latitude</remote-alias>
              <ordinal>9</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station longitude</remote-alias>
              <ordinal>10</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bikeid</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bikeid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bikeid</remote-alias>
              <ordinal>11</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>usertype</remote-name>
              <remote-type>129</remote-type>
              <local-name>[usertype]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>usertype</remote-alias>
              <ordinal>12</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[birth year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth year</remote-alias>
              <ordinal>13</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>20</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>14</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>15</ordinal>
              <family>2014-01 - Citi Bike trip data.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[cum:usr:Calculation_834291853491060736:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[pcto:usr:Calculation_834291853491060736:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[pcdf:usr:Calculation_834291853491060736:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:starttime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 48 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 48 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2014-01 - Citi Bike trip data.csv' id='2014-01 - Citi Bike trip data.csv_817B087D1B2E468EABDC11EEE8AF6D24'>
            <properties context=''>
              <relation all='true' name='2014-01 - Citi Bike trip data.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' />
                  <column datatype='datetime' name='starttime' />
                  <column datatype='datetime' name='stoptime' />
                  <column datatype='integer' name='start station id' />
                  <column datatype='string' name='start station name' />
                  <column datatype='real' name='start station latitude' />
                  <column datatype='real' name='start station longitude' />
                  <column datatype='string' name='end station id' />
                  <column datatype='string' name='end station name' />
                  <column datatype='real' name='end station latitude' />
                  <column datatype='real' name='end station longitude' />
                  <column datatype='integer' name='bikeid' />
                  <column datatype='string' name='usertype' />
                  <column datatype='date' date-parse-format='yyyy' name='birth year' />
                  <column datatype='integer' name='gender' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-01 - Citi Bike trip data.csv' table='[2014-01 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='string' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-02 - Citi Bike trip data.csv' table='[2014-02 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-03 - Citi Bike trip data.csv' table='[2014-03 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-04 - Citi Bike trip data.csv' table='[2014-04 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-05 - Citi Bike trip data.csv' table='[2014-05 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-06 - Citi Bike trip data.csv' table='[2014-06 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='string' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-07 - Citi Bike trip data.csv' table='[2014-07 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='string' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='2014-08 - Citi Bike trip data.csv' table='[2014-08 - Citi Bike trip data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='string' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201409-citibike-tripdata.csv' table='[201409-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201410-citibike-tripdata.csv' table='[201410-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201411-citibike-tripdata.csv' table='[201411-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1w6lt1r1gzs27y1e1vxo71sjorvs' name='201412-citibike-tripdata.csv' table='[201412-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='12'>Start-End Station in the city</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column-instance column='[end station latitude]' derivation='Avg' name='[avg:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='Avg' name='[avg:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]' />
              <lod column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:end station latitude:qk]' />
              <lod column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:end station longitude:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:start station latitude:qk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{C195F03D-D161-4741-BC7B-4B18D04C536A}' />
    </worksheet>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1' fontname='Times New Roman' fontsize='16'>How many trips have been recorded total during the chosen period?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontname='Times New Roman' fontsize='12'>It has been analyzed that total trip in 2014 was 8,081,216 by 6811 uniqye Bikes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Unique Bike id' datatype='integer' name='[Calculation_834291853493370882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_834291853493370882]' derivation='User' name='[usr:Calculation_834291853493370882:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853493370882:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{366A611B-01CC-4078-B3A2-53A5251708AE}' />
    </worksheet>
    <worksheet name='Q10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='12'>Gender breakdown </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='14'>Female is most city bike rider</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
            </column>
            <column caption='Gender_Cat' datatype='string' name='[Calculation_1479432500277837825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [gender] = 0 then &quot;Male&quot;&#13;&#10;ELSEIF [gender] = 1 then &quot;Female&quot;&#13;&#10;ELSEIF [gender] = 2 THEN &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1479432500272410624]' derivation='None' name='[none:Calculation_1479432500272410624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1479432500277837825]' derivation='None' name='[none:Calculation_1479432500277837825:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[pcto:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500272410624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='264' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' />
              <size column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' />
              <text column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' />
              <text column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[pcto:usr:Calculation_834291853491060736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B2BD208D-19D4-4801-8FCE-BF6679D9014D}' />
    </worksheet>
    <worksheet name='Q11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>How effective has gender outreach been in increasing female ridership over the timespan?</run>
            <run>Æ&#10;</run>
            <run fontname='Times New Roman' fontsize='12'>Its hows that female are effective riders over the time span from february to october</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Gender_Cat' datatype='string' name='[Calculation_1479432500277837825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [gender] = 0 then &quot;Male&quot;&#13;&#10;ELSEIF [gender] = 1 then &quot;Female&quot;&#13;&#10;ELSEIF [gender] = 2 THEN &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[cum:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1479432500277837825]' derivation='None' name='[none:Calculation_1479432500277837825:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500277837825:nk]' member='&quot;Female&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[cum:usr:Calculation_834291853491060736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk] + [federated.1rb60m0067e3mh1dcpqfi1uc59oz].[cum:usr:Calculation_834291853491060736:qk])</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{EACA554A-AE5F-46F0-A401-1DF022534A76}' />
    </worksheet>
    <worksheet name='Q12'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>How does the average trip duration change by age?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today 2014' datatype='date' name='[Calculation_1479432500300562434]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='#2014-01-01#' />
            </column>
            <column aggregation='Sum' caption='Age' datatype='integer' name='[Calculation_1479432500301152259]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='Int(DATEDIFF(&apos;day&apos;,[birth year],[Calculation_1479432500300562434]) /365.25)' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='date' datatype-customized='true' name='[birth year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1479432500301152259]' derivation='None' name='[none:Calculation_1479432500301152259:ok]' pivot='key' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1479432500301152259:ok]' />
              <groupfilter function='member' level='[none:Calculation_1479432500301152259:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:tripduration:qk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]</cols>
      </table>
      <simple-id uuid='{41247C3D-2470-4221-80FB-110D57180E90}' />
    </worksheet>
    <worksheet name='Q13'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>What is the average distance in miles that a bike is ridden?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Distance' datatype='real' name='[Calculation_1479432500308398084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DISTANCE(&#13;&#10;MAKEPOINT([start station longitude],[start station latitude]),&#13;&#10;MAKEPOINT([end station longitude],[end station latitude]),&#13;&#10;&apos;miles&apos;)' />
            </column>
            <column-instance column='[Calculation_1479432500308398084]' derivation='Avg' name='[avg:Calculation_1479432500308398084:qk]' pivot='key' type='quantitative' />
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]' scope='cols' value='Avg. Distance in miles' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]</cols>
      </table>
      <simple-id uuid='{EEC2038D-609E-4890-8C42-FFFD94B48468}' />
    </worksheet>
    <worksheet name='Q14'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman'>Which bikes (by ID) are most likely due for repair or inspection in the timespan?</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='14'>The bikes which have riden more after 0.63 miles need repair</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Distance' datatype='real' name='[Calculation_1479432500308398084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DISTANCE(&#13;&#10;MAKEPOINT([start station longitude],[start station latitude]),&#13;&#10;MAKEPOINT([end station longitude],[end station latitude]),&#13;&#10;&apos;miles&apos;)' />
            </column>
            <column-instance column='[Calculation_1479432500308398084]' derivation='Avg' name='[avg:Calculation_1479432500308398084:qk]' pivot='key' type='quantitative' />
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]' scope='cols' value='Avg. Distance in miles' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[avg:Calculation_1479432500308398084:qk]</cols>
      </table>
      <simple-id uuid='{C8E45D9A-FA3B-4692-8CF3-7E5A0A8BAE05}' />
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#c290b4' fontname='Times New Roman' fontsize='16'>By what percentage has total ridership grown?</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='14'>It shows that percentage of total ride ship has been decrease after february but after november it again shows the growth rate.</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[pcdf:usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]' ordering-field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[starttime]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[pcdf:usr:Calculation_834291853491060736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1rb60m0067e3mh1dcpqfi1uc59oz].[pcdf:usr:Calculation_834291853491060736:qk] + [federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk])</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{A6007184-70AD-4464-98E9-677B4808C1CF}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='12'> proportion of short-term customers and annual subscribers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>9</bucket>
              <bucket>8</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:usertype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok] / [federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:usertype:nk])</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</cols>
      </table>
      <simple-id uuid='{F93BE0B9-E97B-4FCC-ABC1-ABE3E7BEB956}' />
    </worksheet>
    <worksheet name='Q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='12'>Peak hours in which bikes are used during summer months</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>The peak hours in which bikes are used during summer months are 8 am to 6pm from April to July</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month' name='[mn:stoptime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:stoptime:ok]' member='4' />
              <groupfilter function='member' level='[mn:stoptime:ok]' member='5' />
              <groupfilter function='member' level='[mn:stoptime:ok]' member='6' />
              <groupfilter function='member' level='[mn:stoptime:ok]' member='7' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{4C3735A4-0CE5-4357-808F-20377CED688D}' />
    </worksheet>
    <worksheet name='Q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>What are the peak hours in which bikes are used during winter months?</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>The peak hours in which bikes are used during summer months are 8 am to 6pm from November to February</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='11' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:starttime:qk]</cols>
      </table>
      <simple-id uuid='{E00023B7-585D-4EBD-A714-E5C13594476D}' />
    </worksheet>
    <worksheet name='Q6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>Today, what are the top 10 stations in the city for starting a journey? (Based on data, why do you hypothesize these are the top locations?)</run>
            <run>Æ&#10;&#10;</run>
            <run fontname='Times New Roman' fontsize='14'>These are the top 10 station analyzed from Station name and start time using Total trips by bike riders.</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1479432500272410624]' derivation='None' name='[none:Calculation_1479432500272410624:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500272410624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_834291853491060736]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</column>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' />
              <text column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{45D08D3B-1BE7-4A92-9F3A-F625468A23FB}' />
    </worksheet>
    <worksheet name='Q7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>Today, what are the top 10 stations in the city for ending a journey? (Based on data, why?)</run>
            <run>Æ&#10;&#10;</run>
            <run fontname='Times New Roman' fontsize='14'>These are the top 10 ending journey station analyzed from Station name and end time using Total trips by bike riders</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1479432500272410624]' derivation='None' name='[none:Calculation_1479432500272410624:nk]' pivot='key' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500272410624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_834291853491060736]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</column>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' />
              <text column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{487CE829-C9CD-4872-98A4-F0E1ADE7F65B}' />
    </worksheet>
    <worksheet name='Q8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='18'>Today, what are the bottom 10 stations in the city for starting a journey? (Based on data, why?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1479432500272410624]' derivation='None' name='[none:Calculation_1479432500272410624:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500272410624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_834291853491060736]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</column>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</cols>
      </table>
      <simple-id uuid='{39A3D73C-DB9D-4E00-B778-654033CAD7BD}' />
    </worksheet>
    <worksheet name='Q9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontname='Times New Roman' fontsize='12'> The bottom 10 stations in the city for ending a journey </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2014-01 - Citi Bike trip data' name='federated.1rb60m0067e3mh1dcpqfi1uc59oz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rb60m0067e3mh1dcpqfi1uc59oz'>
            <column caption='Today' datatype='boolean' name='[Calculation_1479432500272410624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DAY([starttime]) = DAY(TODAY())' />
            </column>
            <column caption=' Total Trip in 2014' datatype='integer' name='[Calculation_834291853491060736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([bikeid])' />
            </column>
            <column caption='Bikeid' datatype='string' datatype-customized='true' name='[bikeid]' role='dimension' type='nominal' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1479432500272410624]' derivation='None' name='[none:Calculation_1479432500272410624:nk]' pivot='key' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_834291853491060736]' derivation='User' name='[usr:Calculation_834291853491060736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]'>
            <groupfilter function='member' level='[none:Calculation_1479432500272410624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_834291853491060736]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</column>
            <column>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</rows>
        <cols>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</cols>
      </table>
      <simple-id uuid='{9016C339-F555-45C6-89DA-DEB064EED582}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3ebf3' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='background-color' value='#d4d4d4' />
          <format attr='border-color' value='#000000' />
          <format attr='border-width' value='5' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#f0f3fa' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='center' />
          <format attr='vertical-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='22' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='7' type-v2='layout-basic' w='98438' x='781' y='1042'>
              <zone h='48958' id='10' name='Q3' w='39453' x='59766' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97916' id='11' name='MAP' w='32520' x='781' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='18' name='Q9' w='34278' x='64941' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='19' name='Q4' w='31640' x='33301' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='20' name='Q10' w='26465' x='33301' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='49' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='280' h='97916' id='11' is-fixed='true' name='MAP' w='32520' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='20' is-fixed='true' name='Q10' w='26465' x='33301' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='10' is-fixed='true' name='Q3' w='39453' x='59766' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='19' is-fixed='true' name='Q4' w='31640' x='33301' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='18' is-fixed='true' name='Q9' w='34278' x='64941' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1C40FAF3-A0BA-485D-8034-84E33B61FAD7}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C84D6B8E-7FFE-4491-8B05-28FBF266EAA5}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[:Measure Names]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[attr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA6E59EA-C033-4EE7-9742-8FDD2971F88F}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:usertype:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECDC0DC3-4742-4381-9225-20E0D4920949}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[dy:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[dy:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC1F374A-AEEF-4F5C-8C24-F935FAFB94BD}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[dy:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[dy:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[hr:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:stoptime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3065095-81FD-4DED-B53D-5BAEB4671B2E}' />
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA4144B1-2181-4470-932A-23AD229ADD3B}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[usr:Calculation_834291853491060736:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33CFD3F-8FDA-4EF0-9F25-C4036FC09ED2}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C04EDFC7-B301-4BB5-AAFA-91800070E86F}' />
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A238E2AF-1B1E-4207-A1BA-90BFC26EBF42}' />
    </window>
    <window class='worksheet' name='Q10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500272410624:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD90E863-F9F4-4953-9DEF-26642F5A61EC}' />
    </window>
    <window class='worksheet' name='Q11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[cum:usr:Calculation_834291853491060736:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[mn:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500277837825:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:starttime:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B7EECCF-16F3-447D-A650-99495263F9C6}' />
    </window>
    <window class='worksheet' name='Q12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:Calculation_1479432500301152259:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:birth year:nk]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[qr:birth year:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:Calculation_1479432500300562434:ok]</field>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[yr:birth year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B5A01D7-A207-4DC5-957F-A2DD983ECC89}' />
    </window>
    <window class='worksheet' name='Q13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{469E87FD-70F1-4DEC-B8ED-C886954E5ABE}' />
    </window>
    <window class='worksheet' name='Q14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:bikeid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7D75462-180C-4842-B01D-CA09A9176850}' />
    </window>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rb60m0067e3mh1dcpqfi1uc59oz].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A6227C0-3958-4FE7-BF7C-68B7BB5997C3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q10' />
        <viewpoint name='Q3' />
        <viewpoint name='Q4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q9'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{4FF64B8D-33E9-4468-97AB-4888870EF22E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Yd0UegAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      +CdXDTV9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='40' name='Q1' width='192'>
      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
      ASd8eP5Ys4SBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q10' width='192'>
      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
      C11JsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q12' width='192'>
      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
      gsH4iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbWUlEQVR4nO3dZ3Cd153f8e+D+9yOe9F7ZQEBEARBAuyCKHaxF1Gm5ZWUWGNv1t6xN4ln
      Mpsdr9e72UnWk51sdm3ZjhxYkmXJkiWLYu9NYAFBgCA60XsjeAFctAvg1rywAutOMJOEAHEI
      3/N5yXLPDzP34Hme83/O+Ss+n8+HQOXl5ej1epERpACmig5gMpmIiYkRHUMKUEGiA0iSSHIC
      SAFNTgApoMkJIAU0OQGkgCYngBTQ1Hv37mG1WoUFGB0dRavVChtfCmyqxWIhLi5OWIDbLUN8
      XtkvbHxp4bMatbz5J7lP9H+nC2Fet5PakmsY03aQqLNx8vR1cnfsoPXOFVzhy9iwLIRzF2+z
      ZuuL1Bed59GImy0HXmFZnGVW4XuHJylsdMzqM6TAFmHWPfH/nX4G8LicDLXX0Dbk4crp4/gs
      UYQHG1iz5QC25jIunrpM/oEXuH61mEOvfJ3kCAuR4eY5+QEkSZTpCaA1BpOcEAu4qGt+TFqM
      hgs3qhhoK8OavJL0JZGc+O05BkZHcA3UM2RYTLhePkNLC9sM32AtKzKSaGjpwOJ9xDunSzFr
      vMQsyyEtLoQNGzdRU1ZHVm76/KeVpDnm9zJcwtrDxGh0qMmv0D84SlR4CLmrbXgVlVCrgdUb
      XyQmOgLXVByq3iAqsyTNGb8JoBrMX/yBifg4EwAJiYnTf2/+4nlXYzTNWYD8pZHkroics8+T
      Ao9effJbcdVut89hlP9/McEqmZnilmGlwKbU1tb64uPjhQU4dbeOewOyECbNnyBF4V++thr4
      0i2Qz+uhtaoITfJGEg0jnDp5keytu+ksPstjTQI7cxM4ee4mq7fuxzBYS3V/EAf3PI9WUWYV
      pn3QwelKWQeQ5k+QwvQEmL55ck2M01Jxiyabm8snPkaNTiXaaqCqrp3c7OUMtVbhDF1KssVF
      Ye1jlmo7ud0g9vZJkmZregLozFbSFiUBLmoaurF4bZz7/AGHjhzm3KnjWNPyWRc/zGdXa/AO
      tnC19CETo+MCo0vS7M1YB8hYlsL45CR6vYYR+yhBqhbnpIMxxxQmaxi7du8lOWkpWcvkw6u0
      sPktg8at3ku4Vosh4WWaOx+TujiJ7qZmXnr5ZayaScLic1izNBVbZysbdh0m0aoRlVuS5oTw
      VaDi2jYGNGHCxpcCjwK8si4ZeAbqAEmhOnZlJgvNIAUu4VeA86UNVI/K1yokMf7wDODz0d34
      ACUmhzjTBOfPXCLjue2MNhYzbEghf/USqqtqSF++nMb7N+lyhrJzcy6zfQpo6h/j/Qq5IUYS
      Y3oVyDk+TMXNszzsd3PlxMeoMYsJd9Rxu8tAb0UhrW0tXLxxk7EJJxEpWaidt3loExldkmbv
      D3WA4FCyli0GXFTVtjDVX8eF+50Mt5RSW9uGLzKJZfFhoKgEaxz0KfGkhgpMLklzYMY6wOIl
      qYSGhqBakzh2cBvJK7KIN/z+AFvf1AgfHb9ITu5KFLd7nuNK0tzymwAx2TvITdCy59AhdOYY
      9rywktHRSV7cvx+TLojnXtiB1WJh3ZqV2AdsTLm9onJL0pwQvgp0s6qFLo+4Y1mkwCa8DrAk
      wsD+zCVCM0iBS/gV4Gp5E82T8nQJSQy/OkB/ex1EpmN193G7vJUNmzZi0rhoau0lNkyl6H4j
      657PJ9Sopbm+npT09Fl32KjtGaGgom+WnyJJT8avDnDv0sdU9bo4e+I0qtvGzbImuuvv8Iv3
      zjLu9LIk2s1nl8sZ663lv7/5AZMik0vSHPCrA2RnLgUgxKhw934dRo2DOw9tLF8URXh0DI96
      hkhfEsHl2/XkrpDv70gL3wx3ME46h3wc2LGRS7duojcEUVHaRESIF0PSSlaYJ6juf0TlgwpW
      7z3M6iR5ooO0cPlNgKjMzRgNZnIP7aC4qpOv/+m3CDUpdOzuw+Poo7qpmW5zNv/mz79FV3s7
      sfLLLy1w4leBHjTROCFXgSQxhNcBMmNMvJSZITSDFLiEXwFuVrXQ45WVYEkMvzrAYF87Skgy
      Js8gVY09ZGWvYKizjhEljNRILQ8q60lalo1vuJMht5kVGamz7rFU3mmnoKJnlp8iSU9megI4
      x4e5efJtzNu/z9jdz9CHhlA43E9r6zCaqcdMroil0R7FUq0P24SHurvH0Ud/j/RwkfElaXb8
      6gCrstJRAIveR3lNC9h7iMzawMqYMMZCk/D2FHO9tINFKbH4jLFEBwtMLklzYIY7GCctNh+v
      HdlB/+gEg21N9DgmWZKcwdHDWxnu6eL8pUI27z1IiNY3/4klaQ75TYCItPVkRps4si+foqoe
      9rz0BusSJohZ+TyKrYkzhV0cPZyPSXVx5cJZegYnROWWpDkhfBXofGkDlcPyVAhJDOF1gJz4
      YF7Znik0gxS4hF8Bih+2MaSRS0mSGH51gNGhfjBHYfCM0to9SMqiVHCOMubSEBFiZmJkAJc2
      BOdQN49H3SxeugT9LA8Gutc6SEFF1+w+RJKe0JfqAHYuf/hjrLt+yGTJJ0xodHSM+NB136Zd
      SeH1/Rs5XfBfMGz7SxwlZ0lanU+qwOCSNBe+VAcII2/lchR8mFQfja3dmIPN5K7bhF4DrRVF
      eKxJ6DWQlBTH7cvneDzmEZldkmZtxjpA84CPrx99kdampuk/LSkpobuzjbLyGjbsPMjm5ZH0
      j7jmMaokzT2//QBhi1az1GwiY3se10pa2L53HzrtFDkZOtL3bmasrwlbUDR3Lp9i2JrDnkS5
      fCktbMJXgU7eraPYJrtESmIod+7c8YWGij3kMzNT1gEkMdTQ0FBEXgEeNHTQXi2PRZHEmH4G
      8Hpc2B7bMIdGYtJrGB0ZIzjEyrCtjymfjvBgPQPD40RGRTIxPIBT0RMRZmV2XYLhVpONgoqO
      WX6KJD2Z6VUgx3Av9+8V8/YHJ+lqrOTnP3+XSeCDt9+ivqWT/s5mbp//iPMlzdRVV/Cb//lL
      HstFIGmBm54AwWFJbFqTSWhoCEnLVpEaYwGcJMTEUFxSTnBUOPYBB9GREYQFa3DqrZhnux1M
      kgSb/goP9tRz5X43Xz2y40t/reXgq98kPtjNhNvMsa9upbykiriM9ayKdNAkLwHSAjc9AVyO
      MWy9LZy6cAs3kLlyJSoOzn38ETHL1jLeU8tn11vZuz2bosunGIlYRWa0XL6UFjbhdYBPbtVy
      o1feS0liyDqAFNCE1wFqWrooah4QNr4U2Pz2A3jcLtBoUXweppxu9AY9CuB2u1FVFefUJIqq
      Q/G48BCEXq+bdR3gWl0/BRVts/wUSXoyfvsBPiv4ByL2/R3jRb+id2SKjOcPszpymH/4xQ2+
      +/omzt6oYf0LWxlqvE9ZVR1Hv/1XpMhD3aQFbHoC6ILD2JCXQxMubOMadm7J5WpNHSNKF0nx
      MZRcv8rQpIG6lscc272fYZsN7Wzbw0iSYDMsv+g5tPc5rl0vxf24ivI2O1WldxkmmAPH3mC4
      4wFXTp8gY/vLxJvmP7AkzSW/3+GWuDQSrBps7X1YEjLYs3cnIQYP94qqSVscwunTn5C78QUa
      7l2h6+p5THsPkxQpZ4G0cAmvA3zweTXn2+UJc5IYSlFRkS8kJERcAEUhI0P2B5DEUK1WK3Fx
      ccICNHX2UtszImx8KbCpiqKgKLNdzX9yF6r7KKhoETa+FNj+UAcYG+J4wY+I3v/3qNUfcq+p
      n037DtFd9DmNIwrbMq3cqW4jOXcfRzbG8tff/xe+/9/+E/KEdGkh8zsXaGPeSnw+Hy6XG1XV
      4MPC0ddfJTFMR3v7AEfeeIWW8nvcuVZIeHysyNySNCdmKGW56LLDwZ353G+r43TVIzbvOUK4
      r58TJ86heMa4eLsDe38fjZ022SdYWtD8JoA5KoUYi46w9FiuF9Wwfk0mF+sHGbx0hfzcRLwa
      C8fe+FekRJi4e+MGmfLLLy1wwusA71yt5HiTW9j4UmBTiouLfeHh4o4nd7vdsg4gCaOaTCZE
      bojpfmSj2y5bLUliqBqNBq1W3N7e05W9FPy6Wdj4UmDzqwOcePefiN37A1LGijl3t4Wd+7dS
      ePwEg1g48NwyLl8rZMWOr9JdfIZHYz6O/el3SLTMskOGJAnkVwdYn5OBy+PhypXr4J2gt/wO
      ppwDrI/R44xLYVFUGK6JMSbNiexZHU1ZvezwLi1sM+wH8OHRhfPyvi00NDbhdk7hUhQMqpHM
      nKX09o2xMl7LlftNRFgt859YkuaQ3wQwhsURbtKyZV0GvztfyJoDX0ff8Tm9ahQTTWVcu9tC
      dnYqk5MuwhetJW+p2NMkJGm2hNcB3rpYzvsPp4SNLwU2pbS01BcRESEswNTUFOnp6cLGlwKb
      qqoqer1eWADH5BRjU7ISLImh6nQ6TCZx+3p/eaOOgneb/u//UJKegi/VAewUnvk15o1/xkDJ
      cdIyUunqeUyfK5bwqTayNm0heLSBmz1mPPY+0sImcCbvJC9V7giQFq4v1QFCSUsIx+H0YfSO
      cPzMDXTmYPra6qmvfIjdM8KnJz7HrPPhVDTExEbQ2y1bG0kL24x9gltsPl47soNOu46vvpiD
      EhFNqBLMy1/ZSmN9Bw67ne6OHsJjouY/sSTNIb/9ABFp69EaTeTsy+dqSTO7dm/m3vlL7Dx4
      lKCRdi5U2fjaK/sYaiyh3m7gxaXiTpOQpLkgvA5wvrSBymHZcFsSQ7Xb7UID5MQH88p22R9A
      EkP4FaD4YRtDGnEbcqTA5tcfYHSoH8wRjPS0YXdMERGXiHPoEWpIDDEhOtpaO4lOTKa/s5lJ
      j4bE1MWEmHSzCnCvdZCCiq7Z/hyS9ET8+gNc/vDHWHd9n0WucRrL79A2uonISTvFl26zJsXM
      I6+GwQedrEsL5u7nN8h/9S8IkWfjSguY336AvJXLUdCwZPlKvFjYsnYlirOfIGMo7X3j7Nx3
      BGW8kxVZizHGryQj2igyuyTN2oztGX2jzYyblmB2jbMsfx/6iV50ipu+Rx2gj6bjwX2SV+fN
      uj2SJInmVwcIW7SapWYV55SGjZtyQHFy5eRp0tfvIDfVyNkLd9l74ACuxx2sSggTlVmS5ozw
      VaCTd+sotsmG25IYsk+wFNCE9wl+0NBBe7V8qU4Sw68OMOkYAV0wE3YbDqeb4NAw3OMjaIwh
      mLVebPZxIqMi8UyOMjLpIyoidNYPwreabBRUdMzyUyTpyfjVAc68/V8J3fMDYgYbKS+/S/Dy
      LVjtvVR22DiyI4/SOzfQZe5iuPwqDpeTbX/yXdIiZK9UaeHyqwOsXb0CBQ3Z65/Dao1l+4Y8
      LIZJ9JYwIuIisQ84iIoIAY8D24gLo14uhEoL28x1gPE2RvQpWL0TZObvRzvezbjTzLGvbqWs
      sIiJ4BRe2rKUh02P5zuvJM0pvwkQkpRFargG57ibvPWrwTvBueOfkLpqM2Pd1Xx2vZWDh3ew
      KslIWY/K2gy5IUZa2ITXAT65VcuN3hkvRJL01Mk6gBTQhNcBalq6KGoeEDa+FNj86gAetws0
      WtzOSTxeHxpVxeN2AwoGowE8bryKiqpRcDmdqDrdrOsA1+r6Kahom+WnSNKTmb75do7b+d1P
      /5rrzQ7Kb1/n3Z//I5+cLeTc2ZP87Q9/hG3SyZlf/A3nKgdxOx7xV//h7xgXmVyS5sD0FUAX
      HMaGvByaUFm/fQ+PbUNs2rcNw2g7ijkJeqqxuSzEqx4Kr94mcVGiyNySNCdmLOP6JrqwaxII
      1wVRVfWAJdkvcvaTf2Rg2E7jpeMYxwbp7+qUfYKlBc9vAlji0kiwanAOj5G1JheAIFM8qQlm
      Vn3vb7G3V9CjLmV5gpmyoiKWyy+/tMAJrwN88Hk159t9wsaXAptSVFTkCwkRd8KboiiyT7Ak
      jGq1WomLixMWoKmzl9qeEWHjS4FNVRQFRRH3VueF6j4KKlqEjS8FNr8+wccLfkT0/r9Hrf6Q
      e039rNm0hc7GKsrKm/nOd1/jVx+e5t/92+9y7p1/xhmRydGvHCZEbueVFjC/OsDGvJU0+Xy4
      XG5UrQZtWCJfORiDKWIJixZlkresDJ/PS3hULE0DNtweH2jlngBp4ZrhNUwXXXY4uCOfns4O
      WmoekJq1mqDp77nK7mNfZ/MSHY19E/OZVZLmnN8EMEelEGPRkZ0ey/WiGjKXLcZJGEuTrQAk
      JKWg13i4deE4lcOhZCfKcxGlhU14HeCdq5V82iS7REpiKMXFxb7wcHHHk7vdblkHkIRRTSYT
      IjfEdD+y0W2XzxKSGKpGo0GrFbeWebqyl4JfNwsbXwpsfnWAE+/+E7F7f4Cu7lNu1/ex+cCr
      ZIWO8M/vXOfo9kVcKqwgLmsz2oFqqmsa2PWN/8jaVNkoT1q4/M4FWp+TgcvjY2TUQajFyMTE
      JLduFmI0BVNR2cnrf/EdhjvqOHTsFRZnriFXfvmlBW6G/QAubA6FtSszuXHhV3SOwmjvINqc
      dJwuJ0GqnsH6UqxpeWjmP68kzSm/CWAMiyPcpMOUEMLdBw08d/ib5KWFcvVSCctS9Bwv+IC1
      u1+iz9bA6swYUZklac4IrwO8dbGc9x9OChtfCmxKaWmpLyIiQliAqakp0tPThY0vBTZVVVX0
      er2wAI7JKcamZCVYEkPV6XSYTOLe6fnljToK3m0SNr4U2PzqAKfef5OEPd/DVX2RyoZ64rLy
      sdWW4gyOY/eaZC5eu03e/lcZKD1Ho83Fq9/8FtEm+Tq0tHD59wfIWozDqbJ530tkLV5EXqIP
      NW0byb4h3AlLyEmNZnxiiqExN+EGD8OTHpHZJWnWZu4P4BmiazyYlPS1RI2WU9ZtJ1ijEhIb
      QV9DIz69maS4cAYe2+c7ryTNKb8JoLdEYDUEMdXdRHz2OhSNF8UDy9c+x2BdKcXl7SzOTMPo
      G6e+c4ToCLOo3JI0J4TXAX5yroyCCoew8aXAppSVlfmiosR1enE4HKSlpQkbXwpsKoDPJ/Zk
      NpHHskiBTTUYDFitVmEB3rvdxNuyDiAJ4tcn+MLHBcTt+DYTlRepbm4hYdUeIkYrGbIsZ4V1
      kDPXy1m542VGKs4yEBTLkTk4F8jnA49Xng0qiTG9CqQ1WVmxKJqRyd/XAbIXJ7M6ZxkrcnKZ
      GBumsqyRo3/2NSoKrzI2OkGQTodWkV9caWGbngCKEoRG88Ub/t5h2ob1JIVoUdXfXyTyNmRz
      9qNTuLXBfO3b/54s4yMqu+ReXmlh86sDaI0WTFqFyc6HRGSuQwGCVC0WkwGNVg9OD9t25HPj
      7KfcaXOzNNYoKLYkzQ1ZB5ACmlJRUeGLjo4WFmBgaJiElEXCxpcCm+p0OpmYEHcvrwZBqEkn
      bHwpsKlmsxmRJ8P94lI5H37cIWx8KbBN1wFcE6PcOPU+UfnfJMXTwGdXyti87wD3ThSgJq5h
      z8ZlnD51gWXrtzHWUkpDv4/X//VXMM74Pun/uym3l8Fx52x/Dkl6ItNfX43OSGKYjgGHl8uX
      LuJRFFTFS2+vDYslhMob5+idAlVnJO+5rYR4hxmT2wGkBW56AgRpVExGA+Cmd8DNvq2ruFlU
      xff+5j/T31hCc8djdh44xN1rl7A/asfhdjE2JvfySgub3w2MRqtHq9GyPjuZT05fITE5gpMf
      /Johr4UN+Wu58tF7hMQmc7+sgtEpMOpmef8jSYLJOoAU0JTq6mpfbGyssACdfY8Ji00SNr4U
      2NTx8XEGBgaEBTBoIEVurZQEUS0WCzEx4s75fPdaJX9+pk/Y+FJgm64DuKfGuXvpOKFrjzJ4
      /wIPO7pZlPsi27LDOXnpPhuyozh/uYS8XUdZvSiE4x+dYO/XvoJhlgFGJ9202OQzgCTG9ARQ
      glSClTEejWrYvu8lzFdOELwokcri01Q1TOAbbGfPawc4+ZsbhKyNpLi6hV0Cg0vSXPhDIUyr
      Jyzki62RXge1vW4iRyq5WGlDddhISkvg+K9P0PeokU8uPcCqTmGzj4vKLUlzwm8hX1EUFEVh
      srMMfUoehsjFHNi2Fq1WizU8BoPiZdueQ+zfuwOTTosmSNYBpIVN1gGkgDZDi6T59WJWLAef
      jxMdQwpQqt0u9nzPYC1kJorrUywFtj/cAvl8dDc+QInJIc40wfkzl8h4bjuWiS5u1jzm+RVx
      XC9pZNfe3dibS6l5HMTuretm3SjvN4XVXJLbASRBvnQu0DAVN8+i35xFTfnHqAm5RAc7+dUH
      n7P10EF0wQY2pjZx5vo9HP3trIp2UdSUTv7S2bVKHRhz8qBTPgNIYnypP0AoWcsWAy6qaluY
      elTH+d99SsOwl8KTn9HvHOXijUriY8Lx2LsoqW1leGhEYHRJmj2ltLTUFxwcDMBIdx12cxrj
      PXUsSU2ipb0FtyaGyKARtEmLCVcdVNfZyUyLZaivDXfIEuJCZvccfbq8m9Ptc/GjzM7w8DAh
      Ic9G4+9nJcuzksPlcuFyuZ5KKy/FJ/hk3IaGBqHvIv1v77zzDm+88YboGMCzk+VZydHS0kJH
      RwdbtmyZ88+WlawvWCwW0RGmPStZnpUcWq0Wo/HpHMImrwBSQJNXACmgPRMToKWikLfe/BlV
      3SOAm/Mfv8tb7x1nyuN9quOOdNfwP372FtfLmvAB7Q/LeP/Tc091zJl5Kb5ykl8UvEfvyBST
      I/18/F4BH527Ne9J2qpu8dabP6Oi0w44Offbd3n7t2dxzfsR9m4u/O493nrvOJPu338Puqs+
      58ydujkd5ZmYAHfLmnjtG/sovlIEg7X06rLINo3ROPx0zwu6cqWYY984Rkt5GT4fRCenMzn8
      6KmOOSNHP7WPVXavT6Gipg1dcARHXnmV0d75bxxSdL+BV7+xn5JrRYDKpm270EwM4p7vI3AG
      H9KjySDH4qBhaBKvc5TLhSWMD8/tmwvPxARw+UCvN6LihqkJ0Bkx6nW4n/JvHYcHzDod6hfl
      bKPZjEZEtyaPG59GRasz4PN58LknKbx8jnUv7Jn3KE4vGPRGVDxAELbeDsYm3Ti98zwDpiZB
      b8Co1+HxernwmwIGvTpaWttxz+GNwTMxATLjjfz0J79hUXocp2om8Daco7DHzbJQ/VMdd8uq
      JH7843eJWJLJp7/7BACDYbZ73J5AcAyhE60cv1pBvK+d90+c5+b9Fh5WVDDfp7ZmJZr56U8+
      IDU9gZNnTnG3pAanT4M2aJ5/M8SswNd4kRudU3jrrxOSe4R9m3NJSYhlLqPIVSApoD0TVwBJ
      EkVOACmgyQkg/dHz+Xw4p6aY6V5fTgDpj557vJvv/+UP6R//P1eyhG+JlKSnran4Dmu35VNT
      10xRVwM5UUHUu600VFXLCSD9kfO5uHS7HHNUNFUtdramwskalby4AbYdfk1OAOmPm3fCTt7e
      18lfk0HRzVukpoai6TOQnQCnLh2XdQApMA33NnLqwg05AaTA9r8AEHZ7uESdiiwAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q14' width='192'>
      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
      dMm9xTZqiqsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      raYAtoEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
      Bcub/w+U+kqMsBvejwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
      bxA/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
      JDYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q9' width='192'>
      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
      8qXSlPP/AfTPUjU1PmJAAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
